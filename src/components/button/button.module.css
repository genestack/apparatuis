/*
 * Copyright (c) 2011-2019 Genestack Limited
 * All Rights Reserved
 * THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF GENESTACK LIMITED
 * The copyright notice above does not evidence any
 * actual or intended publication of such source code.
 */

/* stylelint-disable no-descending-specificity */

@import "../../variables.css";

.root {
    composes: resetButton from "../../variables.css";
    box-sizing: border-box;
    display: inline-flex;
    vertical-align: middle;
    align-items: center;
    border-radius: calc(var(--gs-spacing-unit) / 2);
    cursor: pointer;
    position: relative;
    max-width: 100%;
    text-align: left;
}

:root {
    --gs-button-box-shadow-active: inset 0 2px 4px rgba(0, 0, 0, 0.25);
    --gs-outlined-box-shadow: 0 0 0 1px var(--gs-color-grey-outline);
}

.root.disabled,
.root:disabled {
    cursor: not-allowed;
    outline: none;
}

.root:focus:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    border-radius: calc(var(--gs-spacing-unit) / 2);
    box-shadow: 0 0 0 2px var(--gs-color-action-25);
}

.root.disabled:after,
.root:disabled:after {
    display: none;
}

.defaultSize {
    padding-top: calc(var(--gs-spacing-unit) * 0.75);
    padding-bottom: calc(var(--gs-spacing-unit) * 0.75);
}

.withText {
    padding-left: calc(var(--gs-spacing-unit) * 2);
    padding-right: calc(var(--gs-spacing-unit) * 2);
}

.withIcon {
    padding-left: calc(var(--gs-spacing-unit) / 2);
    padding-right: calc(var(--gs-spacing-unit) / 2);
}

.withIconAndText {
    padding-left: var(--gs-spacing-unit);
    padding-right: calc(var(--gs-spacing-unit) * 2);
}

.tiny {
    padding-top: calc(var(--gs-spacing-unit) / 4);
    padding-bottom: calc(var(--gs-spacing-unit) / 4);
}

.tiny.withIcon {
    padding-left: 0;
    padding-right: 0;
}

.icon {
    margin: 0 2px;
    flex-grow: 0;
    flex-shrink: 0;
    display: inline-flex;
}

.content {
    flex-grow: 1;
    flex-shrink: 1;
}

.ellipsis {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    min-width: 0;
    text-align: center;
}

/* Default variant */

.defaultVariant {
    background-color: var(--gs-color-grey-background);
    color: var(--gs-color-action-text);
}

.defaultVariant :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-action-text-60);
}

.defaultVariant :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-action-text-60);
}

/* hover */

.defaultVariant:hover {
    background-color: var(--gs-color-action-hover);
    color: var(--gs-color-white);
}

.defaultVariant:hover :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-white);
}

.defaultVariant:hover :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-white);
}

/* active */

.defaultVariant.active,
.defaultVariant:active {
    background: var(--gs-color-action-text);
    color: var(--gs-color-grey-background);
    box-shadow: var(--gs-button-box-shadow-active);
}

.defaultVariant.active :global(.gs-svg-icon-fill),
.defaultVariant:active :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-grey-background);
}

.defaultVariant.active :global(.gs-svg-icon-stroke),
.defaultVariant:active :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-grey-background);
}

/* disabled */

.defaultVariant.disabled,
.defaultVariant:disabled {
    background-color: var(--gs-color-grey-background);
    color: var(--gs-color-grey-50);
    box-shadow: none;
}

.defaultVariant.disabled :global(.gs-svg-icon-fill),
.defaultVariant:disabled :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-grey-50);
}

.defaultVariant.disabled :global(.gs-svg-icon-stroke),
.defaultVariant:disabled :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-grey-50);
}

/* Primary variant */

.primary {
    background-color: var(--gs-color-action);
    color: var(--gs-color-grey-background);
}

.primary :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-grey-background);
}

.primary :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-grey-background);
}

/* hover */

.primary:hover {
    background-color: var(--gs-color-action-hover);
    color: var(--gs-color-white);
}

.primary:hover :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-white);
}

.primary:hover :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-white);
}

/* active */

.primary.active,
.primary:active {
    background: var(--gs-color-action-text);
    color: var(--gs-color-grey-background);
}

.primary.active :global(.gs-svg-icon-fill),
.primary:active :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-grey-background);
}

.primary.active :global(.gs-svg-icon-stroke),
.primary:active :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-grey-background);
}

.primary.active:after,
.defaultVariant:active:after {
    box-shadow: var(--gs-button-box-shadow-active);
}

/* disabled */

.primary.disabled,
.primary:disabled {
    background-color: var(--gs-color-grey-50);
    color: var(--gs-color-grey-background);
}

.primary.disabled :global(.gs-svg-icon-fill),
.primary:disabled :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-grey-background);
}

.primary.disabled :global(.gs-svg-icon-stroke),
.primary:disabled :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-grey-background);
}

/* Outlined variant */

.outlined {
    color: var(--gs-color-action-text);
    box-shadow: var(--gs-outlined-box-shadow);
}

.outlined :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-action-text-60);
}

.outlined :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-action-text-60);
}

/* hover */

.outlined:hover {
    background-color: var(--gs-color-grey-background);
}

.outlined:hover :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-action-text);
}

.outlined:hover :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-action-text);
}

/* active */

.outlined.active,
.outlined:active {
    background: var(--gs-color-action-text);
    color: var(--gs-color-grey-background);
    box-shadow: var(--gs-outlined-box-shadow), var(--gs-button-box-shadow-active);
}

.outlined.active :global(.gs-svg-icon-fill),
.outlined:active :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-grey-background);
}

.outlined.active :global(.gs-svg-icon-stroke),
.outlined:active :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-grey-background);
}

/* disabled */

.outlined.disabled,
.outlined:disabled {
    background-color: transparent;
    box-shadow: var(--gs-outlined-box-shadow);
    color: var(--gs-color-grey-50);
}

.outlined.disabled :global(.gs-svg-icon-fill),
.outlined:disabled :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-grey-50);
}

.outlined.disabled :global(.gs-svg-icon-stroke),
.outlined:disabled :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-grey-50);
}

/* Ghost variant */

.ghost {
    background-color: transparent;
    color: var(--gs-color-action-text);
}

.ghost :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-action-text-60);
}

.ghost :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-action-text-60);
}

/* hover */

.ghost:hover {
    background-color: var(--gs-color-grey-background-50);
}

.ghost:hover :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-action-text);
}

.ghost:hover :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-action-text);
}

/* active */

.ghost.active,
.ghost:active {
    background: var(--gs-color-grey-background);
    color: var(--gs-color-black);
}

.ghost.active :global(.gs-svg-icon-fill),
.ghost:active :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-black);
}

.ghost.active :global(.gs-svg-icon-stroke),
.ghost:active :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-black);
}

/* disabled */

.ghost.disabled,
.ghost:disabled {
    background-color: transparent;
    box-shadow: none;
    color: var(--gs-color-grey-50);
}

.ghost.disabled :global(.gs-svg-icon-fill),
.ghost:disabled :global(.gs-svg-icon-fill) {
    fill: var(--gs-color-grey-50);
}

.ghost.disabled :global(.gs-svg-icon-stroke),
.ghost:disabled :global(.gs-svg-icon-stroke) {
    stroke: var(--gs-color-grey-50);
}
