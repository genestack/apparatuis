/*
 * Copyright (c) 2011-2019 Genestack Limited
 * All Rights Reserved
 * THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF GENESTACK LIMITED
 * The copyright notice above does not evidence any
 * actual or intended publication of such source code.
 */
@import "../../variables.css";

.root {
    cursor: pointer;
    z-index: 0;
    text-decoration: none;
}

.root:focus {
    box-shadow: 0 0 0 2px var(--gs-color-action-25);
}

.root:disabled,
.root.disabled {
    box-shadow: none;
    opacity: 0.5;
    cursor: not-allowed;
}

/**
 * When header item includes secondary actions element
 * and user hover on it, the item should remove its hover state.
 * It is possible to create "fake" element that is used as background
 * and hide it by general sibling CSS combinator "~".
 * @see `.secondaryActionsCell` selector
 */
.fakeHover {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    pointer-events: none;
}

.root:hover .fakeHover {
    background: var(--gs-color-white-smoke);
}

.root:active .fakeHover,
.root.active .fakeHover {
    background: var(--gs-color-grey-background);
}

.root:disabled .fakeHover,
.root.disabled .fakeHover {
    display: none;
}

.secondaryActionsCell:hover ~ .fakeHover {
    display: none;
}

/**
 * Fake hover element is the last element in header item
 * so selectors for cells take it in account.
 */
.root .cell:nth-last-of-type(2) {
    margin-right: calc(var(--gs-spacing-unit) * 1.5);
}

.root .iconCell:nth-last-of-type(2) {
    margin-right: var(--gs-spacing-unit);
}

.root .iconCell:first-of-type:nth-last-of-type(2) {
    margin-left: calc(var(--gs-spacing-unit) * 1.5);
    margin-right: calc(var(--gs-spacing-unit) * 1.5);
}

/**
 * In IE 11 `:active` selector does not work
 * for elements that have nested elements.
 */
@media all and (-ms-high-contrast: none) {
    *::-ms-backdrop,
    .root .cell {
        pointer-events: none;
    }

    *::-ms-backdrop,
    .root .iconCell {
        pointer-events: none;
    }

    *::-ms-backdrop,
    .root .secondaryActionsCell {
        pointer-events: all;
    }
}
